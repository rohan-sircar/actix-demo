# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on: [push, pull_request]

name: Continuous Integration

jobs:
  check:
    name: Check
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Run Cargo Check
        run: cargo check

  test:
    name: Test Suite
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Run Unit Tests
        run: cargo test --lib
      - name: Run Integration Tests
        run: cargo test --test integration
      - name: Run flaky Tests
        run: cargo test -- --ignored

  lints:
    name: Lints
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Run Cargo fmt
        run: cargo fmt --all -- --check
      - name: Run Cargo clippy
        run: cargo clippy -- -D warnings

  publish-devel-docker:
    name: Publish devel Docker Image
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/devel'
    runs-on: ubuntu-latest
    needs: [check, test, lints]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: rohansircar
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}
      - name: Build And Publish Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: rohansircar/actix-demo:devel
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: build.Dockerfile

  publish-docker:
    name: Publish main Docker Image
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    needs: [check, test, lints]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: rohansircar
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}
      - name: Build And Publish Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: rohansircar/actix-demo:latest
          platforms: linux/ppc64le,linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: PROFILE=release
          file: build.Dockerfile
